{
  "_args": [
    [
      {
        "raw": "ircam-rnd/xmm-node",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "ircam-rnd/xmm-node",
        "spec": "github:ircam-rnd/xmm-node",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:ircam-rnd/xmm-node.git",
          "sshUrl": "git+ssh://git@github.com/ircam-rnd/xmm-node.git",
          "httpsUrl": "git+https://github.com/ircam-rnd/xmm-node.git",
          "gitUrl": "git://github.com/ircam-rnd/xmm-node.git",
          "shortcut": "github:ircam-rnd/xmm-node",
          "directUrl": "https://raw.githubusercontent.com/ircam-rnd/xmm-node/master/package.json"
        }
      },
      "/Users/ismm/Projects/prototype0.4"
    ]
  ],
  "_from": "ircam-rnd/xmm-node",
  "_id": "xmm-node@0.3.0",
  "_inCache": true,
  "_location": "/xmm-node",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ircam-rnd/xmm-node",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "ircam-rnd/xmm-node",
    "spec": "github:ircam-rnd/xmm-node",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:ircam-rnd/xmm-node.git",
      "sshUrl": "git+ssh://git@github.com/ircam-rnd/xmm-node.git",
      "httpsUrl": "git+https://github.com/ircam-rnd/xmm-node.git",
      "gitUrl": "git://github.com/ircam-rnd/xmm-node.git",
      "shortcut": "github:ircam-rnd/xmm-node",
      "directUrl": "https://raw.githubusercontent.com/ircam-rnd/xmm-node/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git://github.com/ircam-rnd/xmm-node.git#e99eb1c608a38c6a9edca24f7f8661ef1fe7f8c6",
  "_shasum": "5e3c0a97ff66a686a7686c96cd9d5daadeb5b633",
  "_shrinkwrap": null,
  "_spec": "ircam-rnd/xmm-node",
  "_where": "/Users/ismm/Projects/prototype0.4",
  "author": {
    "name": "Joseph Larralde"
  },
  "babel": {
    "presets": [
      "es2015"
    ]
  },
  "bugs": {
    "url": "https://github.com/Ircam-RnD/xmm-node/issues"
  },
  "dependencies": {
    "nan": "^2.3.5"
  },
  "description": "node wrapper for the XMM library",
  "devDependencies": {
    "babel-core": "^6.14.0",
    "babel-preset-es2015": "^6.14.0",
    "babel-tape-runner": "^2.0.1",
    "jsdoc-template": "github:ircam-jstools/jsdoc-template",
    "jsdoc-to-markdown": "^1.3.7",
    "tape": "^4.6.0",
    "xmm-client": "github:ircam-rnd/xmm-client"
  },
  "gitHead": "e99eb1c608a38c6a9edca24f7f8661ef1fe7f8c6",
  "homepage": "https://github.com/Ircam-RnD/xmm-node#readme",
  "keywords": [
    "xmm",
    "machine learning",
    "gmm",
    "hmm",
    "regression"
  ],
  "license": "GPL-3.0",
  "main": "index.js",
  "name": "xmm-node",
  "optionalDependencies": {},
  "readme": "# xmm-node\n### XMM native addon for Node.js\n\nWraps the [XMM](https://github.com/ircam-rnd/xmm) library into a Node.js module.\nCan be used together with the client-side model decoders library\n[xmm-client](https://github.com/ircam-rnd/xmm-client).\n\n#### developers :\n\ninstall :\n- install latest Node.js version\n- install node-gyp : `npm install -g node-gyp`\n- clone xmm-node : `git clone --recursive https://github.com/ircam-rnd/xmm-node.git`\n- install dependencies listed in `package.json` : `npm install`\n\nbuild : `node-gyp configure build`\n\ntest : `npm run tests`\n\n#### users :\n\n`npm install [--save] ircam-rnd/xmm-node`\n\nexample :\n\n```JavaScript\n// es6 :\nimport xmm from 'xmm-node';\n// or older es versions :\nvar xmm = require('xmm-node');\n\n// then :\nvar hhmm = new xmm('hhmm', {\n\tgaussians: 3,\n\tstates: 12,\n\trelativeRegularization: 0.1,\n\tabsoluteRegularization: 0.1\n});\n\n// valid xmm phrase created with xmm-client/PhraseMaker\nvar phrase = someFunctionReturningAPhrase();\n\nhhmm.addPhrase(phrase);\n\nhhmm.train(function(err, res) {\n\tif (err === null) {\n\t\t// res is a trained model : pass it to xmm-client/HhmmDecoder\n\t\t// or use hhmm.filter(someObservationVector) to do the decoding server-side.\n\t}\n});\n```\n\n#### credits :\n\nThis library is developed by the [ISMM](http://ismm.ircam.fr/) team at IRCAM,\nwithin the context of the [RAPID-MIX](http://rapidmix.goldsmithsdigital.com/)\nproject, funded by the European Union’s Horizon 2020 research and innovation programme.  \nOriginal XMM code authored by Jules Françoise, ported to Node.js by Joseph Larralde.  \nSee [github.com/Ircam-RnD/xmm](https://github.com/Ircam-RnD/xmm) for detailed XMM credits.\n\n<hr>\n\n# API documentation :\n\n<a name=\"xmm\"></a>\n\n## xmm\n**Kind**: global class  \n\n* [xmm](#xmm)\n    * [new xmm([modelType], [modelConfig])](#new_xmm_new)\n    * [.getConfig([configParam])](#xmm+getConfig) ⇒ <code>[xmmModelConfig](#xmmModelConfig)</code> &#124; <code>Number</code> &#124; <code>String</code> &#124; <code>Boolean</code>\n    * [.setConfig(config)](#xmm+setConfig)\n    * [.addPhrase(phrase)](#xmm+addPhrase)\n    * [.getPhrase(index)](#xmm+getPhrase) ⇒ <code>Object</code>\n    * [.getPhrasesOfLabel(label)](#xmm+getPhrasesOfLabel) ⇒ <code>Object</code>\n    * [.removePhrase(index)](#xmm+removePhrase)\n    * [.removePhrasesOfLabel(label)](#xmm+removePhrasesOfLabel)\n    * [.getTrainingSetSize()](#xmm+getTrainingSetSize) ⇒ <code>Number</code>\n    * [.getTrainingSetLabels()](#xmm+getTrainingSetLabels) ⇒ <code>Array.String</code>\n    * [.getTrainingSet()](#xmm+getTrainingSet) ⇒ <code>Object</code>\n    * [.setTrainingSet(trainingSet)](#xmm+setTrainingSet)\n    * [.addTrainingSet(trainingSet)](#xmm+addTrainingSet)\n    * [.clearTrainingSet()](#xmm+clearTrainingSet)\n    * [.train(callback)](#xmm+train)\n    * [.cancelTraining()](#xmm+cancelTraining)\n    * [.getModel()](#xmm+getModel) ⇒ <code>Object</code>\n    * [.setModel(model)](#xmm+setModel)\n    * [.getModelType()](#xmm+getModelType) ⇒ <code>&#x27;gmm&#x27;</code> &#124; <code>&#x27;hhmm&#x27;</code>\n    * [.reset()](#xmm+reset)\n    * [.filter(observation)](#xmm+filter) ⇒ <code>Object</code>\n\n<a name=\"new_xmm_new\"></a>\n\n### new xmm([modelType], [modelConfig])\nThe main xmm class.\n\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| [modelType] | <code>&#x27;gmm&#x27;</code> &#124; <code>&#x27;hhmm&#x27;</code> | <code>&#x27;gmm&#x27;</code> | The type of model. |\n| [modelConfig] | <code>[xmmModelConfig](#xmmModelConfig)</code> |  | Configuration parameters for the model. |\n\n<a name=\"xmm+getConfig\"></a>\n\n### xmm.getConfig([configParam]) ⇒ <code>[xmmModelConfig](#xmmModelConfig)</code> &#124; <code>Number</code> &#124; <code>String</code> &#124; <code>Boolean</code>\nGet the actual model configuration parameters or one of them.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n**Returns**: <code>[xmmModelConfig](#xmmModelConfig)</code> &#124; <code>Number</code> &#124; <code>String</code> &#124; <code>Boolean</code> - Depends on the parameter.\n<br /><br />If called without any argument, returns :\n<li style=\"list-style-type: none;\">\n<ul> an object of type <code>xmmModelConfig</code> containing all the actual model configuration parameters</ul>\n</li>\nOtherwise, the returned value type depends on the requested configuration parameter :\n<li style=\"list-style-type: none;\">\n<ul><code>'gaussians'</code> : the number of gaussians</ul>\n<ul><code>'relativeRegularization'</code> : the relative regularization foat value</ul>\n<ul><code>'absoluteRegularization'</code> : the absolute regularization float value</ul>\n<ul><code>'covarianceMode'</code> : the actual covariance mode ('full' or 'diagonal')</ul>\n<ul><code>'hierarchical'</code> : if the model type is not 'hhmm', <code>undefined</code>,\notherwise <code>true</code> if the model is hierarchical and <code>false</code> if it is not</ul>\n<ul><code>'states'</code> : if the model type is not 'hhmm', <code>undefined</code>, otherwise\n\tthe number of states of the hmms</ul>\n<ul><code>'transitionMode'</code> : if the model type is not 'hhmm', <code>undefined</code>,\notherwise the actual transition mode value ('ergodic' or 'leftright')</ul>\n<ul><code>'regressionEstimator'</code> : if the model type is not 'hhmm',\n<code>undefined</code>, otherwise the actual regression estimator used with hmms\n('full', 'windowed' or 'likeliest')</ul>\n</li>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| [configParam] | <code>&#x27;gaussians&#x27;</code> &#124; <code>&#x27;relativeRegularization&#x27;</code> &#124; <code>&#x27;absoluteRegularization&#x27;</code> &#124; <code>&#x27;covarianceMode&#x27;</code> &#124; <code>&#x27;hierarchical&#x27;</code> &#124; <code>&#x27;states&#x27;</code> &#124; <code>&#x27;transitionMode&#x27;</code> &#124; <code>&#x27;regressionEstimator&#x27;</code> | The name of a configuration parameter. |\n\n<a name=\"xmm+setConfig\"></a>\n\n### xmm.setConfig(config)\nSet the actual model configuration parameters.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| config | <code>[xmmModelConfig](#xmmModelConfig)</code> | A config object as returned by [getConfig](getConfig) when called without arguments (missing parameters won't be changed internally and invalid ones will be ignored). |\n\n<a name=\"xmm+addPhrase\"></a>\n\n### xmm.addPhrase(phrase)\nAdd a phrase to the internal training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| phrase | <code>Object</code> | An object containing a valid XMM phrase. |\n\n<a name=\"xmm+getPhrase\"></a>\n\n### xmm.getPhrase(index) ⇒ <code>Object</code>\nGet phrase of a certain index from the internal training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n**Returns**: <code>Object</code> - A valid XMM phrase from the internal training set.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| index | <code>Number</code> | The index of a phrase in the training set. |\n\n<a name=\"xmm+getPhrasesOfLabel\"></a>\n\n### xmm.getPhrasesOfLabel(label) ⇒ <code>Object</code>\nGet phrases of a certain label from the internal training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n**Returns**: <code>Object</code> - A valid XMM training set containing all the requested phrases.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| label | <code>String</code> | The label of which we want to get the phrases. |\n\n<a name=\"xmm+removePhrase\"></a>\n\n### xmm.removePhrase(index)\nRemove phrase of a certain index from the internal training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| index | <code>Number</code> | The index of a phrase in the training set. |\n\n<a name=\"xmm+removePhrasesOfLabel\"></a>\n\n### xmm.removePhrasesOfLabel(label)\nRemove phrases of a certain label from the internal training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| label | <code>String</code> | The label of which we want to remove the phrases. |\n\n<a name=\"xmm+getTrainingSetSize\"></a>\n\n### xmm.getTrainingSetSize() ⇒ <code>Number</code>\nGet the number of phrases in the training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n**Returns**: <code>Number</code> - The number of phrases in the training set.  \n<a name=\"xmm+getTrainingSetLabels\"></a>\n\n### xmm.getTrainingSetLabels() ⇒ <code>Array.String</code>\nGet the array of all the labels in the training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n**Returns**: <code>Array.String</code> - An array containing all the training set's labels.  \n<a name=\"xmm+getTrainingSet\"></a>\n\n### xmm.getTrainingSet() ⇒ <code>Object</code>\nGet the actual training set as an object.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n**Returns**: <code>Object</code> - An object containing a valid XMM training set.  \n<a name=\"xmm+setTrainingSet\"></a>\n\n### xmm.setTrainingSet(trainingSet)\nSets the actual training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| trainingSet | <code>Object</code> | An object containing a valid XMM training set. |\n\n<a name=\"xmm+addTrainingSet\"></a>\n\n### xmm.addTrainingSet(trainingSet)\nAdds a training set to the actual training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| trainingSet | <code>Object</code> | An object containing a valid XMM training set. |\n\n<a name=\"xmm+clearTrainingSet\"></a>\n\n### xmm.clearTrainingSet()\nClears the training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n<a name=\"xmm+train\"></a>\n\n### xmm.train(callback)\nTrains the model with the current training set.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| callback | <code>[trainCallback](#trainCallback)</code> | The callback handling the trained model. |\n\n<a name=\"xmm+cancelTraining\"></a>\n\n### xmm.cancelTraining()\nCancel the current training process. <br />\n<i><strong><font color=\"#f00\">WARNING</font></strong>\nThis feature is experimental and may cause crashes</i>\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n<a name=\"xmm+getModel\"></a>\n\n### xmm.getModel() ⇒ <code>Object</code>\nReturns the trained model (the same object as in [trainCallback](#trainCallback)).\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n**Returns**: <code>Object</code> - An object containing the trained model.  \n<a name=\"xmm+setModel\"></a>\n\n### xmm.setModel(model)\nSets the actual model from another already trained model.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| model | <code>Object</code> | A valid XMM model of the instance's actual type. |\n\n<a name=\"xmm+getModelType\"></a>\n\n### xmm.getModelType() ⇒ <code>&#x27;gmm&#x27;</code> &#124; <code>&#x27;hhmm&#x27;</code>\nReturns the type of the actual model.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n**Returns**: <code>&#x27;gmm&#x27;</code> &#124; <code>&#x27;hhmm&#x27;</code> - The type of model as String.  \n<a name=\"xmm+reset\"></a>\n\n### xmm.reset()\nResets the internal variables used for filtering.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n<a name=\"xmm+filter\"></a>\n\n### xmm.filter(observation) ⇒ <code>Object</code>\nEstimates an input array of floats.\n\n**Kind**: instance method of <code>[xmm](#xmm)</code>  \n**Returns**: <code>Object</code> - filteringResults - An object containing the estimation results.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| observation | <code>Array.Number</code> | The observation we want an estimation of. |\n\n<hr>\n<a name=\"xmmModelConfig\"></a>\n\n## xmmModelConfig\n**Kind**: global typedef  \n**Properties**\n\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| gaussians | <code>Number</code> | <code>1</code> | the number of gaussians used for encoding a state. |\n| relativeRegularization | <code>Number</code> | <code>0.01</code> | the relative regularization (see XMM documentation). |\n| absoluteRegularization | <code>Number</code> | <code>0.01</code> | the absolute regularization (see XMM documentation). |\n| covarianceMode | <code>&#x27;diagonal&#x27;</code> &#124; <code>&#x27;full&#x27;</code> | <code>&#x27;full&#x27;</code> | the type of covariance matrix used in the model. |\n| hierarchical | <code>Boolean</code> | <code>true</code> | if <code>model</code> is 'hhmm', turns hierarchical mode on/off. |\n| states | <code>Number</code> | <code>1</code> | if <code>model</code> is 'hhmm', defines the number of states used to generate each individual hmm. |\n| transitionMode | <code>&#x27;ergodic&#x27;</code> &#124; <code>&#x27;leftright&#x27;</code> | <code>&#x27;leftright&#x27;</code> | if <code>model</code> is 'hhmm', sets the transition mode between the states of the individual hmm models. |\n| regressionEstimator | <code>&#x27;full&#x27;</code> &#124; <code>&#x27;windowed&#x27;</code> &#124; <code>&#x27;likeliest&#x27;</code> | <code>&#x27;full&#x27;</code> | if <code>model</code> is 'hhmm', the type of estimator used for regression with hmms. |\n\n<hr>\n<a name=\"trainCallback\"></a>\n\n## trainCallback : <code>function</code>\nCallback handling the trained model.\n\n**Kind**: global typedef  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| err | <code>String</code> | Description of a potential error. |\n| res | <code>Object</code> | An object containing the trained model. |\n\n<hr>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Ircam-RnD/xmm-node.git"
  },
  "scripts": {
    "dirtytests": "node tests/dirty.js",
    "docs": "jsdoc2md -t docs/README.hbs docs/documentation.js > README.md",
    "install": "node-gyp rebuild",
    "preinstall": "git clone https://github.com/Ircam-RnD/xmm.git",
    "tests": "babel-tape-runner \"tests/*_test.js\""
  },
  "version": "0.3.0"
}
